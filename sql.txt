SET SERVEROUTPUT ON;
DECLARE 
   message  varchar2(20):= 'Hello, World!'; 
BEGIN 
   dbms_output.put_line(message); 
END; 

// 

SET SERVEROUTPUT ON;
DECLARE 
    a integer := 10;
    b integer := 20;
    c integer;
    f real;
BEGIN
    c := a + b;
    dbms_output.put_line('Value of c: ' || c);
    f := 70.0/3.0;
    dbms_output.put_line('Value of f: ' || f);
END;

CREATE TABLE CUSTOMERS( 
   ID   INT NOT NULL, 
   NAME VARCHAR (20) NOT NULL, 
   AGE INT NOT NULL, 
   ADDRESS CHAR (25), 
   SALARY   DECIMAL (18, 2),        
   PRIMARY KEY (ID) 
); 

//

INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (1, 'Ramesh', 32, 'Ahmedabad', 2000.00 );  

INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (2, 'Khilan', 25, 'Delhi', 1500.00 );  

INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (3, 'kaushik', 23, 'Kota', 2000.00 );
  
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (4, 'Chaitali', 25, 'Mumbai', 6500.00 ); 
 
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (5, 'Hardik', 27, 'Bhopal', 8500.00 );  

INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) 
VALUES (6, 'Komal', 22, 'MP', 4500.00 ); 

//

DECLARE 
   c_id customers.id%type := 1; 
   c_name  customers.name%type; 
   c_addr customers.address%type; 
   c_sal  customers.salary%type; 
BEGIN 
   SELECT name, address, salary INTO c_name, c_addr, c_sal 
   FROM customers 
   WHERE id = c_id;  
   dbms_output.put_line 
   ('Customer ' ||c_name || ' from ' || c_addr || ' earns ' || c_sal); 
END; 
/ 

//

SET SERVEROUTPUT ON;
PI CONSTANT NUMBER := 3.141592654;

DECLARE
    -- constant declaration
    pi constant number := 3.141562654;
    -- other declaraation
    radius number (5,2);
    dia number (5,2);
    circumference number (7,2);
    area number (10,2);
BEGIN
    -- processing
    radius := 9.5;
    dia := radius*2;
    circumference := 2.0*pi*radius;
    area := pi*radius*radius;
    -- output
    dbms_output.put_line('Radius: ' || radius);
    dbms_output.put_line('Diameter: ' || dia);
    dbms_output.put_line('Circumference: ' || circumference); 
    dbms_output.put_line('Area: ' || area);
END;

//

SET SERVEROUTPUT ON;
DECLARE
    i number (1);
    j number (1);
BEGIN
    << outer_loop >>
    FOR i IN 1..3 LOOP
        << inner_loop >>
        FOR j IN 1..3 LOOP
            dbms_output.put_line('i is: ' || i || ' and j is: ' || j);
        END loop inner_loop;
    END loop outer_loop ;
END;

//

SET SERVEROUTPUT ON;
DECLARE
    name varchar2(20);
    company varchar2(30);
    introduction clob;
    choice char(1);
BEGIN
    name := 'Ashikur Rahman';
    company := 'Infotech';
    introduction := 'Hello! I''m Ashik from Infotech';
    choice := 'y';
    IF choice = 'y' THEN
        dbms_output.put_line(name);
        dbms_output.put_line(company); 
        dbms_output.put_line(introduction);
    END IF;
END;

//

SET SERVEROUTPUT ON;
DECLARE
   get varchar2(11) := 'hello world';
BEGIN
     dbms_output.put_line(UPPER(get));
     dbms_output.put_line(LOWER(get));
     dbms_output.put_line(INITCAP(get));
     dbms_output.put_line(SUBSTR(get,1,1));
     dbms_output.put_line(SUBSTR(get,-1,1));
     dbms_output.put_line(SUBSTR(get,7,5));
     dbms_output.put_line(SUBSTR(get, 2));
     dbms_output.put_line(INSTR(get, 'e'));
END;

//

SET SERVEROUTPUT ON;
DECLARE 
   greetings varchar2(30) := '......Hello World.....'; 
BEGIN 
   dbms_output.put_line(RTRIM(greetings,'.')); 
   dbms_output.put_line(LTRIM(greetings, '.')); 
   dbms_output.put_line(TRIM( '.' from greetings)); 
END;

//

SET SERVEROUTPUT ON;
DECLARE 
    type namesarray IS VARRAY(5) OF VARCHAR2(10);
    type grade IS VARRAY(5) OF integer;
    names namesarray;
    marks grade;
    total integer;
BEGIN
    names := namesarray('Ashik', 'forhad', 'Sony', 'Asif', 'Nahid');
    marks := grade(98, 97, 78, 87, 92);
    total := names.count;
    dbms_output.put_line('Total ' || total || ' Students');
    for i in 1..total loop
        dbms_output.put_line('Student: ' || names(i) || '  Marks: ' || marks(i));
    end loop;
end;

//

SET SERVEROUTPUT ON;
DECLARE 
   cursor c_customers is select name from customers;
   type c_list is varray (6) of customers.name%type;
   name_list c_list := c_list();
   counter integer := 0;
BEGIN
    for n in c_customers loop
    counter := counter + 1;
    name_list.extend;
    name_list(counter) := n.name;
    dbms_output.put_line('Customer(' || counter || '): ' || name_list(counter));
    end loop;
END;

